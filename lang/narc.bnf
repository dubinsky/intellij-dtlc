//noinspection BnfResolveForFile
{
  generate=[java="8" names="long"]

  parserClass="org.ice1000.tt.psi.narc.NarcParser"

  psiClassPrefix="Narc"
  psiImplClassSuffix="Impl"
  psiPackage="org.ice1000.tt.psi.narc"
  psiImplPackage="org.ice1000.tt.psi.narc.impl"

  elementTypeHolderClass="org.ice1000.tt.psi.narc.NarcTypes"
  elementTypeClass="org.ice1000.tt.psi.narc.NarcElementType"
  tokenTypeClass="org.ice1000.tt.psi.narc.NarcTokenType"

  extends(".*Expr")=expr
  extends(".*Pattern")=pattern
}

file ::= declaration*

private declaration ::= clause | definition | data | codata

private identifier ::= IDENTIFIER
nameDecl ::= identifier {
}
nameUsage ::= identifier {
	extends=expr
}

expr ::= appExpr | nonApp
private nonApp ::=
   piExpr
 | dollarExpr
 | litExpr
 | nameUsage
 | projectExpr
 | telescopic
 | parenExpr

private telescopic ::= telescopicExpr | telescopic2Expr

projectOp ::= DOT nameUsage { pin=1 }

projectExpr ::= expr projectOp
piExpr ::= expr ARROW expr
telescopic2Expr ::= LBRACE nameDecl+ COLON expr RBRACE {
	pin=3
}
telescopicExpr ::= LPAREN nameDecl+ COLON expr RPAREN {
	pin=3
}
dollarExpr ::= expr DOLLAR expr
litExpr ::= META IDENTIFIER | KW_TYPE
appExpr ::= expr nonApp+
parenExpr ::= LPAREN expr RPAREN

definition ::= KW_DEFINITION nameDecl COLON expr SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.narc.NarcDefinitionGeneratedMixin'
}
clause ::= KW_CLAUSE nameUsage copattern* EQ expr SEMI {
	pin=1
}
data ::= KW_DATA nameDecl telescopic* LBRACE constructor* RBRACE SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.narc.NarcDataMixin'
}
codata ::= KW_CODATA nameDecl telescopic* LBRACE projection* RBRACE SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.narc.NarcCodataMixin'
}

projection ::= KW_PROJECTION nameDecl COLON expr SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.narc.NarcProjectionGeneratedMixin'
}
constructor ::= KW_CONSTRUCTOR nameDecl telescopic* SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.narc.NarcConstructorGeneratedMixin'
}

copattern ::= projectOp | pattern
pattern ::= nameDecl | inaccessiblePattern | consPattern

inaccessiblePattern ::= LINACCESS expr RINACCESS { pin=1 }
consPattern ::= LPAREN nameUsage pattern* RPAREN { pin=1 }
