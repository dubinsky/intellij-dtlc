//noinspection BnfResolveForFile
{
  generate=[java="8" names="long"]

  parserClass="org.ice1000.tt.psi.voile.VoileParser"

  psiClassPrefix="Voile"
  psiImplClassSuffix="Impl"
  psiPackage="org.ice1000.tt.psi.voile"
  psiImplPackage="org.ice1000.tt.psi.voile.impl"

  elementTypeHolderClass="org.ice1000.tt.psi.voile.VoileTypes"
  elementTypeClass="org.ice1000.tt.psi.voile.VoileElementType"
  tokenTypeClass="org.ice1000.tt.psi.voile.VoileTokenType"

  extends(".*Expr")=expr
}

file ::= declaration*

private declaration ::= implementation | signature

private identifier ::= IDENTIFIER
nameDecl ::= identifier {
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileNameDeclGeneratedMixin'
}
nameUsage ::= identifier {
	extends=expr
	mixin='org.ice1000.tt.psi.voile.VoileNameUsageGeneratedMixin'
}
label ::= IDENTIFIER

expr ::= appExpr | nonApp
private nonApp ::=
   sigExpr
 | piExpr
 | dollarExpr
 | commaExpr
 | pipeExpr
 | litExpr
 | lamExpr
 | nameUsage
 | upExpr
 | recordExpr
 | projectExpr
 | rowPolymorpicExpr
 | caseOfExpr
 | rowKindExpr
 | telescopicExpr
 | telescopic2Expr
 | parenExpr

row ::= KW_SUM | KW_REC
rowPolymorpicExpr ::= row LBRACE property* defaultFields? RBRACE { pin=2 }
rowKindExpr ::= row LBRACK label+ RBRACK { pin=2 }
property ::= label COLON expr SEMI { pin=1 }

recordExpr ::= LBRACE2 field* defaultFields? RBRACE2 { pin=1 }
private defaultFields ::= REST EQ expr { pin=1 }
field ::= label EQ expr SEMI { pin=1 }

caseOfExpr ::= KW_CASE label nameDecl COLON expr KW_OR expr {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileLocalDeclMixin'
}

upExpr ::= UP expr { pin=1 }
projectExpr ::= expr DOT label
piExpr ::= expr ARROW expr { mixin='org.ice1000.tt.psi.voile.VoilePiSigMixin '}
sigExpr ::= expr SIG expr { mixin='org.ice1000.tt.psi.voile.VoilePiSigMixin '}
telescopic2Expr ::= LBRACE nameDecl+ COLON expr RBRACE {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileLocalDeclMixin'
}
telescopicExpr ::= LPAREN nameDecl+ COLON expr RPAREN {
	pin=3
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileLocalDeclMixin'
}
dollarExpr ::= expr DOLLAR expr
pipeExpr ::= expr PIPE expr
commaExpr ::= expr COMMA expr
lamExpr ::= LAM nameDecl+ DOT expr {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileLocalDeclMixin'
}
litExpr ::= META | CONS | KW_TYPE | KW_NOCASES
appExpr ::= expr nonApp+
parenExpr ::= LPAREN expr RPAREN

signature ::= KW_VAL nameDecl COLON expr SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileGlobDeclGeneratedMixin'
}
implementation ::= KW_LET nameDecl EQ expr SEMI {
	pin=1
	implements=['com.intellij.psi.PsiNameIdentifierOwner']
	mixin='org.ice1000.tt.psi.voile.VoileGlobDeclGeneratedMixin'
}